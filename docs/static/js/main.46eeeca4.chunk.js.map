{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","divRoot","document","querySelector","ReactDOM","render"],"mappings":"qMAIaA,EAAa,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,cAAkB,EAENC,mBAAS,KAFH,mBAEnCC,EAFmC,KAEvBC,EAFuB,KAkB1C,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAOlB,SACI,uBACIO,KAAM,OACNC,MAAST,EACTU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,4DACJ,mCACD,GACRC,EAHa,iDAGkCC,UAAUH,GAH5C,kBAEL,GAFK,oBACJ,oCADI,SAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAKEA,EAAKC,OALP,uBAKZC,EALY,EAKZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAM,CACFC,GAAKD,EAAIC,GACTC,MAAQF,EAAIE,MACZV,IAAG,UAAGQ,EAAIG,cAAP,aAAG,EAAYC,iBAAiBZ,QAVxB,kBAcZM,GAdY,4CAAH,sDCAPO,EAAc,SAAC,GAAkB,IAAhBH,EAAe,EAAfA,MAAOV,EAAQ,EAARA,IAGjC,OACI,sBAAKc,UAAW,OAAhB,UACI,qBAAKC,IAAMf,EAAKgB,IAAKN,IACrB,4BAAIA,QCJHO,EAAS,SAAC,GAAc,IAAbnB,EAAY,EAAZA,SAAY,ECAR,SAACA,GAAa,IAAD,EAEbd,mBAAS,CAC7BqB,KAAO,GACPa,SAAS,IAJwB,mBAE9BC,EAF8B,KAEvBC,EAFuB,KAyBrC,OAlBAC,qBAAU,WAENxB,EAAQC,GACPwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAKkB,EACLL,SAAS,SAInB,CAACpB,IAQIqB,EDvBsBK,CAAa1B,GAA/Ba,EAFqB,EAE1BN,KAAaa,EAFa,EAEbA,QAEnB,OACI,qCACA,mCAAMpB,EAAN,OACCoB,GAAW,wCACZ,qBAAKJ,UAAY,YAAjB,SAEQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAESA,GADCA,EAAIC,aEZrBgB,EAAe,WAAI,MAGMzC,mBAAS,CAAC,mBAHhB,mBAGtB0C,EAHsB,KAGX3C,EAHW,KAW5B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAEA,6BAEQ2C,EAAWnB,KAAI,SAACT,GAAD,OACd,cAAC,EAAD,CAEGA,SAAWA,GADNA,YClBvB6B,G,MAAUC,SAASC,cAAc,UAEvCC,IAASC,OAAO,cAAC,EAAD,IAAiBJ,K","file":"static/js/main.46eeeca4.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n;\r\n\r\nexport const AddCategory =({setCategories}) =>{\r\n\r\n    const [inputValue, setInputValue] = useState(' ');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){//trim borra espacios en blanco adelante y atras\r\n            setCategories(cats => [ inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    return(\r\n        <form onSubmit ={handleSubmit}>\r\n            <input\r\n                type =\"text\"\r\n                value = {inputValue}\r\n                onChange = {handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes ={\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGifs = async(category) =>{\r\n    const apyKey = 'Pb5pzPXbRfpAJoTY8VbOPk4hH82JZV7o';\r\n    const limit = 10\r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=${limit}&api_key=${apyKey}`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map(img =>{\r\n        return{\r\n            id : img.id,\r\n            title : img.title,\r\n            url : img.images?.downsized_medium.url//singno de interrogacion se acegura que venga algo\r\n\r\n        }\r\n    })\r\n    return gifs;\r\n}\r\n","import React from 'react';\r\n\r\nexport const GifGridItem = ({ title, url}) =>{\r\n    // console.log(id, title, url)\r\n\r\n    return(\r\n        <div className ='card'>\r\n            <img src ={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n} ","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid =({category})=>{\r\n\r\n   const {data:images, loading} =useFetchGifs(category);\r\n  \r\n    return(\r\n        <>\r\n        <h3> {category} </h3>\r\n        {loading && <p>Loading</p>}\r\n        <div className = 'card-grid'>\r\n            {\r\n                images.map(img => (\r\n                    <GifGridItem \r\n                        key ={img.id}\r\n                        {... img}\r\n                    />\r\n                ))\r\n                    \r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n} ","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = (category) =>{\r\n\r\n    const [state, setState]=useState({\r\n        data : [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(()=>{\r\n\r\n        getGifs(category)\r\n        .then(imgs =>{\r\n            setState({\r\n                data:imgs,\r\n                loading: false\r\n            })\r\n            \r\n        })\r\n    },[category])\r\n\r\n  // useEffect (() =>{\r\n    //     getGifs(category)\r\n    //     .then(setImages)\r\n    // },[ category ])\r\n\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = ()=>{\r\n\r\n    // const categories = ['One Punch','Samurai X', 'Drangon Ball'];\r\n    const[categories,setCategories] = useState(['Rick and Morty']);\r\n    \r\n    // const handleAdd = () =>{\r\n        //setCategories((categories)=> categories.push('HuntterxHunter'))\r\n      //  setCategories(categories.push('HuntterxHunter'));\r\n      //  setCategories([...categories,'HunterxHumter']);\r\n      //  setCategories(cats => [...cats, 'HunterxHunter']);\r\n    \r\n    return(\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories = {setCategories} />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map((category) => \r\n                    (<GifGrid \r\n                        key={category}\r\n                        category ={category}/>)\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n\r\n    )\r\n\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n// import reportWebVitals from './reportWebVitals';\n\nconst divRoot = document.querySelector('#root');\n\nReactDOM.render(<GifExpertApp />,divRoot);\n\n"],"sourceRoot":""}